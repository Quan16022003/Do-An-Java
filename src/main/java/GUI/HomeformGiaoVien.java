package GUI;

//import controller.ControllerImp;
import GUI.EditGiaoVien;
import DTO.GiaoVien;
import GUI.modal.Content;
import GUI.modal.HomeAbstractDataModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.RootPaneContainer;
import javax.swing.table.DefaultTableModel;
//import model.GiaoVienlist;

/**
 *
 * @author ADMIN
 */
public class HomeformGiaoVien extends Content {

    /**
     * Creates new form HomeFrm
     */
    private List<GiaoVien> giaoviens;
    private HomeAbstractDataModel tblModel;
    private int selectedIndex;
    private JTable table;
    
    public HomeformGiaoVien() {
        initComponents();
//        this.setLocationRelativeTo(null);
        giaoviens = new ArrayList<>();           
        table = new JTable(tblModel);
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
 //       this.setTitle("Trang chủ");
 //       loadDataFromFile("SV.txt");
    }
    


    
    private void showData() {
//        tblModel.setRowCount(0); // reset nd trong bang ve 0
        tblModel.add(giaoviens);
    }
    
    public void addGiaoVienlist(GiaoVien s) {
        giaoviens.add(s); //them moi sv vao danh sach
        showData();
    }
    
    public void removeGiaoVienlist(GiaoVien s) {
        giaoviens.remove(s); //them moi sv vao danh sach
        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResult = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        table = new JTable(tblModel);
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

//        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("DANH SÁCH GIÁO VIÊN");
        //tblResult.setModel();
//        tblResult.setModel(new javax.swing.table.DefaultTableModel(
//            new Object [][] {
//
//            },
//            new String [] {
//                "Mã giáo viên ", "Tên giáo viên ", "Ngày sinh", "Môn học giảng "
//            }
//        ));

        tblModel = new HomeAbstractDataModel();
        tblResult.setModel(tblModel);
        jScrollPane1.setViewportView(tblResult);

        btnAdd.setText("Thêm mới");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGiaoVienlistActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        
        btnDelete.setText("Xoá");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
  
      //  ignore this 
//        table.setFocusable(false);
//        table.addMouseListener(new MouseAdapter() {
//            @Override
//            public void mouseClicked(MouseEvent evt) {
//               // remove the selected row from the table model
//               selecttablerowActionPerformed(evt);
//            }
//        });


       javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(btnAdd)
                .addGap(49, 49, 49)
                .addComponent(btnEdit)
                .addGap(49, 49, 49)
                .addComponent(btnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addContainerGap(30, Short.MAX_VALUE))
        );

    //    pack();
    }// </editor-fold>                        

    private void btnAddGiaoVienlistActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        InputGiaoVien inputgiaovien = new InputGiaoVien(this);
        inputgiaovien.setVisible(true);
    }                                             

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {                                        
        selectedIndex = tblResult.getSelectedRow();
        if(giaoviens.size() == 0) {
            JOptionPane.showMessageDialog( null,
                    "Hãy nhập thêm giáo viên rồi sửa!");
        } else if(selectedIndex == -1) {
            JOptionPane.showMessageDialog(null, 
                    "Hãy chọn dòng có giáo viên cần sửa rồi ấn Sửa!");
        } else { // chon dong can sua va nhan nut
            EditGiaoVien edit = new EditGiaoVien(this);
            edit.setEditData(giaoviens.get(selectedIndex));
            edit.setVisible(true);
        }
    }
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                        
        selectedIndex = tblResult.getSelectedRow();
        if(giaoviens.size() == 0) {
            JOptionPane.showMessageDialog( null,
                    "Woah woah! Something went very wrong with you !");
        } else if(selectedIndex == -1) {
            JOptionPane.showMessageDialog(null, 
                    "Hãy chọn dòng có giáo viên cần sửa rồi ấn Xoá !");
        } else  
        { // chon dong can sua va nhan nut
            int key = JOptionPane.showConfirmDialog(null, "You about to do something","Are you sure?",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (key == JOptionPane.YES_OPTION){
                    giaoviens.remove(selectedIndex);
                }
        }
        showData();
    }
    
//    private void selecttablerowActionPerformed(java.awt.event.MouseEvent evt){
//        InputFrm inputFrm = new InputFrm(this);
//        inputFrm.setVisible(true);
//    }
    // i am not doing this 


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeformGiaoVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeformGiaoVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeformGiaoVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeformGiaoVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeformGiaoVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResult;
    // End of variables declaration                   

    public void updateGiaoVienlist(GiaoVien s) {
        giaoviens.remove(selectedIndex);
        this.addGiaoVienlist(s);
    }
    
//    private void loadDataFromFile(String sVtxt) {
//        controller = new ControllerImp();
//        giaoviens = controller.readDataFromFile(sVtxt);
//        showData();
//    }
}
